<#@ template debug="false" hostspecific="true" language="C#" #>
<#+ void AddM2MClasses(GenerationContext context){
var model = context.Model;
var settings = context.Settings;
var manager = context.Manager;
#>
<#+   
	if(!settings.PlaceContentsInSeparateFiles)
    {
		 manager.StartNewFile(model.Schema.ClassName + ".ContentsM2M"+".cs");
#>
// Code generated by a template
using System;
using System.Linq;
using System.Collections;
using System.Collections.Generic;
using Quantumart.QP8.EFCore.Models;
<#+
	}
	 #>
<#+  foreach(var content in model.Contents) { #>	
<#+	   	foreach(var attribute in content.Attributes.Where(x => x.IsM2M && x.IsSource == true)) { #>
<#+ 
			if(settings.PlaceContentsInSeparateFiles)
			{
				manager.StartNewFile(attribute.M2MClassName  + ".cs"); #>
// Code generated by a template
using System;
using System.Linq;
using System.Collections;
using System.Collections.Generic;
using Quantumart.QP8.EFCore.Models;
<#+
			}
#>
namespace <#=System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("NamespaceHint")#>
{
    public partial class <#=attribute.M2MClassName#>: IQPLink
    {
		public <#=content.MappedName#> <#=attribute.M2MPropertyName#>;		
		public <#=attribute.RelatedContent.MappedName#> <#=attribute.M2MRelatedPropertyName#>;

		public int <#=attribute.M2MPropertyName#>_ID { get; set; }	
		public int <#=attribute.M2MRelatedPropertyName#>_ID { get; set; }

		public int LinkId
		{
			get { return <#=attribute.LinkId#>; }
		}

		public int Id { get { return <#=attribute.M2MPropertyName#>_ID; } }
        public int LinkedItemId { get { return <#=attribute.M2MRelatedPropertyName#>_ID; } }
	}

<#+	 if(settings.UseReversedAssociations && attribute.RelatedContent.SplitArticles)
		{
#>
	public partial class <#=attribute.M2MReverseClassName#>: IQPLink
    {
		public <#=content.MappedName#> <#=attribute.M2MReversePropertyName#>;		
		public <#=attribute.RelatedContent.MappedName#> <#=attribute.M2MReverseRelatedPropertyName#>;

		public int <#=attribute.M2MReversePropertyName#>_ID { get; set; }	
		public int <#=attribute.M2MReverseRelatedPropertyName#>_ID { get; set; }

		public int LinkId
		{
			get { return <#=attribute.LinkId#>; }
		}

<#+  if(attribute.ContentId != attribute.RelatedContentId) { #>
                    
		public int Id { get { return <#=attribute.M2MReversePropertyName#>_ID; } }
        public int LinkedItemId { get { return <#=attribute.M2MReverseRelatedPropertyName#>_ID; } }
<#+ } else { #>
	   public int Id { get { return <#=attribute.M2MReverseRelatedPropertyName#>_ID; } }
       public int LinkedItemId { get { return <#=attribute.M2MReversePropertyName#>_ID; } }
<#+ } #>

	}

<#+     } #>
}
<#+}#>
<#+}#>
<#+}#>